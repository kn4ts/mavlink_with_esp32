// 割り込み関数
void IRAM_ATTR onTimer() {
  digitalWrite(LED_PIN, !digitalRead(LED_PIN));  // LEDピンをトグルする

  Flag_timer = 1;
}

// タイマーの設定関数
void setupTimer(){
  /* =========================================================================================================
	タイマー関数の設定
  ========================================================================================================= */
  timer = timerBegin(0,                            // タイマーID: 0-3
                                                   //80,     // [clock/count]
                     getApbFrequency() / 1000000,  // 1[us]固定
                     true);                        // カウントアップorダウン: true アップ，false ダウン
  timerAttachInterrupt(timer,                      // 設定するタイマー
                       &onTimer,                   // 割り込み関数の指定
                       true);                      // 割り込み検知方法: true エッジトリガ， false レベルトリガ
  timerAlarmWrite(timer,                           // 設定するタイマー
                  50*1000, // 50*1000, //1000000,                         // カウント数(us相当)
                  true);                           // autoreloadオプション: true 定期実行，false 1ショット実行
  timerAlarmEnable(timer);                         // タイマーを有効化
  /* =========================================================================================================
	タイマー関数の設定ここまで
  ========================================================================================================= */
}
